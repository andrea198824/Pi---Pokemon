{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\Henry\\\\Final PI\\\\Pi---Pokemon\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPokemon // getTypes,\n// getDetail,\n// getDetailByName,\n// postPokemon,\n// filterPokemonCreated,\n// filterPokemonType,\n// orderByName\n} from \"../actions\"; // import { Link } from \"react-router-dom\";\n// import Card from \"./Card\";\n// import Pagination from './Pagination';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  const allPokemons = useSelector(state => state.pokemons); //Paginado acá abajo\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(12);\n  const [order, setOrder] = useState(''); //Para modificar el estado local y me ayude al renderizado\n\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; // console.log(allPokemons);\n\n  const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n  const pagination = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  useEffect(() => {\n    dispatch(getPokemons());\n  }, [dispatch]);\n\n  const handleClick = e => {\n    e.preventDefault();\n    dispatch(cleanPokemons(dispatch));\n    dispatch(getPokemons());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: allPokemons.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Filters, {\n            setCurrentPage: setCurrentPage,\n            setOrder: setOrder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              handleClick(e);\n            },\n            children: \"Clear filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              pokemonsPerPage: pokemonsPerPage,\n              allPokemons: allPokemons.length,\n              pagination: pagination\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cards,\n            children: currentPokemons === null || currentPokemons === void 0 ? void 0 : currentPokemons.map((e, k) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.card,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  id: e.id,\n                  name: e.name,\n                  image: e.img,\n                  types: e.types\n                }, e.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 45\n                }, this)\n              }, k, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"izSlWQsZ0jqnLj4biUMO0/WKSdM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/andre/Desktop/Henry/Final PI/Pi---Pokemon/PI-Pokemon-main/client/src/components/Home.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getPokemon","Home","dispatch","allPokemons","state","pokemons","currentPage","setCurrentPage","pokemonsPerPage","setPokemonsPerPage","order","setOrder","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","pagination","pageNumber","getPokemons","handleClick","e","preventDefault","cleanPokemons","length","styles","cards","map","k","card","id","name","img","types"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,UADJ,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AARJ,OASO,YATP,C,CAUA;AACA;AACA;;;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE3B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,WAAW,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA/B,CAH2B,CAI3B;;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC,CAP2B,CAOa;;AACxC,QAAMgB,kBAAkB,GAAGN,WAAW,GAAGE,eAAzC;AACA,QAAMK,mBAAmB,GAAGD,kBAAkB,GAAGJ,eAAjD,CAT2B,CAU3B;;AACA,QAAMM,eAAe,GAAGX,WAAW,CAACY,KAAZ,CAAkBF,mBAAlB,EAAuCD,kBAAvC,CAAxB;;AAEA,QAAMI,UAAU,GAAGC,UAAU,IAAI;AAC7BV,IAAAA,cAAc,CAACU,UAAD,CAAd;AACH,GAFD;;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,QAAQ,CAACgB,WAAW,EAAZ,CAAR;AACH,GAFQ,EAEN,CAAChB,QAAD,CAFM,CAAT;;AAIA,QAAMiB,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAnB,IAAAA,QAAQ,CAACoB,aAAa,CAACpB,QAAD,CAAd,CAAR;AACAA,IAAAA,QAAQ,CAACgB,WAAW,EAAZ,CAAR;AACH,GAJD;;AAOA,sBACI;AAAA,cACMf,WAAW,CAACoB,MAAZ,GAAqB,CAArB,gBACE;AAAA,8BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAA,kCACI,QAAC,OAAD;AAAS,YAAA,cAAc,EAAEhB,cAAzB;AAAyC,YAAA,QAAQ,EAAEI;AAAnD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAS,YAAA,OAAO,EAAES,CAAC,IAAI;AAACD,cAAAA,WAAW,CAACC,CAAD,CAAX;AAAe,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,kCACI;AAAA,mCACI,QAAC,UAAD;AACI,cAAA,eAAe,EAAEZ,eADrB;AAEI,cAAA,WAAW,EAAEL,WAAW,CAACoB,MAF7B;AAGI,cAAA,UAAU,EAAEP;AAHhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAK,YAAA,SAAS,EAAEQ,MAAM,CAACC,KAAvB;AAAA,sBAEIX,eAFJ,aAEIA,eAFJ,uBAEIA,eAAe,CAAEY,GAAjB,CAAqB,CAACN,CAAD,EAAIO,CAAJ,KAAU;AAC3B,kCACI;AAAa,gBAAA,SAAS,EAAEH,MAAM,CAACI,IAA/B;AAAA,uCACI,QAAC,IAAD;AAEA,kBAAA,EAAE,EAAER,CAAC,CAACS,EAFN;AAGA,kBAAA,IAAI,EAAET,CAAC,CAACU,IAHR;AAIA,kBAAA,KAAK,EAAEV,CAAC,CAACW,GAJT;AAKA,kBAAA,KAAK,EAAEX,CAAC,CAACY;AALT,mBACKZ,CAAC,CAACS,EADP;AAAA;AAAA;AAAA;AAAA;AADJ,iBAAUF,CAAV;AAAA;AAAA;AAAA;AAAA,sBADJ;AAUH,aAXD;AAFJ;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,gBAmCE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AApCR;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH;;GArEuB1B,I;UAEHH,W,EACGC,W;;;KAHAE,I;AAqEvB","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    getPokemon,\r\n    // getTypes,\r\n    // getDetail,\r\n    // getDetailByName,\r\n    // postPokemon,\r\n    // filterPokemonCreated,\r\n    // filterPokemonType,\r\n    // orderByName\r\n} from \"../actions\";\r\n// import { Link } from \"react-router-dom\";\r\n// import Card from \"./Card\";\r\n// import Pagination from './Pagination';\r\n\r\n\r\nexport default function Home() {\r\n\r\n    const dispatch = useDispatch();\r\n    const allPokemons = useSelector((state) => state.pokemons)\r\n    //Paginado acá abajo\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pokemonsPerPage, setPokemonsPerPage] = useState(12);\r\n    const [order, setOrder] = useState(''); //Para modificar el estado local y me ayude al renderizado\r\n    const indexOfLastPokemon = currentPage * pokemonsPerPage;\r\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\r\n    // console.log(allPokemons);\r\n    const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\r\n\r\n    const pagination = pageNumber => {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getPokemons())\r\n    }, [dispatch])\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        dispatch(cleanPokemons(dispatch));\r\n        dispatch(getPokemons());\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            { allPokemons.length > 0 ?\r\n                <div>\r\n                    <Nav />\r\n                    <div>\r\n                        <div>\r\n                            <Filters setCurrentPage={setCurrentPage} setOrder={setOrder} />\r\n                            <button  onClick={e => {handleClick(e)}}>Clear filters</button>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <Pagination\r\n                                    pokemonsPerPage={pokemonsPerPage}\r\n                                    allPokemons={allPokemons.length}\r\n                                    pagination={pagination}\r\n                                />\r\n                            </div>\r\n                            <div className={styles.cards}>\r\n                            {\r\n                                currentPokemons?.map((e, k) => {\r\n                                    return(\r\n                                        <div key={k} className={styles.card}>\r\n                                            <Card \r\n                                            key={e.id}\r\n                                            id={e.id}\r\n                                            name={e.name}\r\n                                            image={e.img}\r\n                                            types={e.types} />\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <Loading />\r\n            } \r\n        </div>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}