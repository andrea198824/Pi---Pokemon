{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\Henry\\\\Final PI\\\\Pi---Pokemon\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\CreatePokemon.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postPokemon, getTypes, getPokemon } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validate(input) {\n  let errors = {};\n\n  if (input.name === '') {\n    errors.name = 'Es necesario un nombre';\n  }\n\n  if (input.hp < 0) {\n    errors.hp = 'Debe ser mayor a 0';\n  }\n\n  if (input.attack < 0) {\n    errors.attack = 'Debe ser mayor a 0';\n  }\n\n  if (input.defense < 0) {\n    errors.defense = 'Debe ser mayor a 0';\n  }\n\n  if (input.speed < 0) {\n    errors.speed = 'Debe ser mayor a 0';\n  }\n\n  if (input.height < 0) {\n    errors.height = 'Debe ser mayor a 0';\n  }\n\n  if (input.weight < 0) {\n    errors.weight = 'Debe ser mayor a 0';\n  }\n\n  if (input.types.length === 0) {\n    errors.types = 'Debe tener al menos un tipo';\n  } else if (!input.image) {\n    errors.image = \"Please insert an image URL\";\n  } else if (!/(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)/.test(input.image)) {\n    errors.image = \"Please insert a valid image URL\";\n  }\n\n  return errors;\n}\n\nexport default function CreatePokemon() {\n  _s();\n\n  const dispatch = useDispatch(); //const history = useNavigate();\n\n  const types = useSelector(state => state.types);\n  const pokemons = useSelector(state => state.pokemons);\n  const [input, setInput] = useState({\n    name: \"\",\n    hp: \"\",\n    attack: \"\",\n    defense: \"\",\n    speed: \"\",\n    height: \"\",\n    weight: \"\",\n    types: []\n  });\n  const [errors, setErrors] = useState({});\n  const [button, setButton] = useState(true);\n  const [types2, setTypes] = useState([]);\n  useEffect(() => {\n    dispatch(getTypes());\n    dispatch(getPokemon());\n  }, [dispatch]); // function handleChange(e) {\n  //     e.preventDefault();\n  //     setInput({\n  //         ...input,\n  //         [e.target.name]: e.target.value,\n  //     });\n  //     setErrors(\n  //         validate({\n  //             ...input,\n  //             [e.target.name]: e.target.value,\n  //         })\n  //     );\n  //     console.log(input);\n  // }\n  // function handleSelect(e) {\n  //     setInput({\n  //         ...input,\n  //         types: Array.from(new Set([...input.types, e.target.value]))\n  //     })\n  //     if (input.name === '' || input.hp === '' || input.attack === '' || input.defense === '' || input.height === '' || input.weight === '' || input.types.length < 0) {\n  //         setButton(true)\n  //     } else {\n  //         setButton(false)\n  //     }\n  // }\n  // function handleSubmit(e) {\n  //     e.preventDefault();\n  //     if (pokemons.find((poke) => poke.name.toLowerCase() === input.name.toLowerCase().trim())) {\n  //         alert(\"Ya existe el Pokemon\");\n  //         setErrors({\n  //             ...input,\n  //             [e.target.name]: \"PokÃ©mon duplicated\",\n  //         });\n  //         history.push('/home')\n  //     } else {\n  //         dispatch(postPokemon(input));\n  //         alert('Pokemon Created');\n  //         setInput({\n  //             name: \"\", hp: \"\", attack: \"\", defense: \"\", speed: \"\", height: \"\", weight: \"\", types: []\n  //         });\n  //         history.push('/home');\n  //     }\n  // }\n  // function handleDelete(e) {\n  //     e.preventDefault();\n  //     setTypes(types.filter((types) => types !== e.target.value));\n  //     console.log(types);\n  //     console.log(e.target.value);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crea tu propio Pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Write a name...\",\n        title: \"Only letters and blank spaces are accepted\",\n        pattern: \"^[A-Za-z\\xD1\\xC1\\xE1\\xC9\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreatePokemon, \"JNMipL6w5pVZ7ohPVSCCQDJS/OU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = CreatePokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePokemon\");","map":{"version":3,"sources":["C:/Users/andre/Desktop/Henry/Final PI/Pi---Pokemon/PI-Pokemon-main/client/src/components/CreatePokemon.jsx"],"names":["React","useState","useEffect","Link","useNavigate","useDispatch","useSelector","postPokemon","getTypes","getPokemon","validate","input","errors","name","hp","attack","defense","speed","height","weight","types","length","image","test","CreatePokemon","dispatch","state","pokemons","setInput","setErrors","button","setButton","types2","setTypes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postPokemon, getTypes, getPokemon } from '../actions/index';\r\n\r\nfunction validate(input) {\r\n    let errors = {};\r\n    if (input.name === '') {\r\n        errors.name = 'Es necesario un nombre'\r\n    }\r\n    if (input.hp < 0) {\r\n        errors.hp = 'Debe ser mayor a 0'\r\n    }\r\n    if (input.attack < 0) {\r\n        errors.attack = 'Debe ser mayor a 0'\r\n    }\r\n    if (input.defense < 0) {\r\n        errors.defense = 'Debe ser mayor a 0'\r\n    }\r\n    if (input.speed < 0) {\r\n        errors.speed = 'Debe ser mayor a 0'\r\n    }\r\n    if (input.height < 0) {\r\n        errors.height = 'Debe ser mayor a 0'\r\n    }\r\n    if (input.weight < 0) {\r\n        errors.weight = 'Debe ser mayor a 0'\r\n    }\r\n    if (input.types.length === 0) {\r\n        errors.types = 'Debe tener al menos un tipo'\r\n    } else if (!input.image) {\r\n        errors.image = \"Please insert an image URL\";\r\n    } else if (\r\n        !/(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)/.test(input.image)\r\n    ) {\r\n        errors.image = \"Please insert a valid image URL\";\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default function CreatePokemon () {\r\n    const dispatch = useDispatch();\r\n    //const history = useNavigate();\r\n    const types = useSelector((state) => state.types);\r\n    const pokemons = useSelector((state) => state.pokemons);\r\n    const [input, setInput] = useState({ name: \"\", hp: \"\", attack: \"\", defense: \"\", speed: \"\", height: \"\", weight: \"\", types: [] });\r\n    const [errors, setErrors] = useState({});\r\n    const [button, setButton] = useState(true);\r\n    const [types2, setTypes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTypes());\r\n        dispatch(getPokemon())\r\n    }, [dispatch])\r\n\r\n\r\n\r\n    // function handleChange(e) {\r\n    //     e.preventDefault();\r\n    //     setInput({\r\n    //         ...input,\r\n    //         [e.target.name]: e.target.value,\r\n    //     });\r\n    //     setErrors(\r\n    //         validate({\r\n    //             ...input,\r\n    //             [e.target.name]: e.target.value,\r\n    //         })\r\n    //     );\r\n    //     console.log(input);\r\n    // }\r\n\r\n\r\n    // function handleSelect(e) {\r\n\r\n    //     setInput({\r\n    //         ...input,\r\n    //         types: Array.from(new Set([...input.types, e.target.value]))\r\n    //     })\r\n\r\n    //     if (input.name === '' || input.hp === '' || input.attack === '' || input.defense === '' || input.height === '' || input.weight === '' || input.types.length < 0) {\r\n    //         setButton(true)\r\n    //     } else {\r\n    //         setButton(false)\r\n    //     }\r\n\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n    // function handleSubmit(e) {\r\n    //     e.preventDefault();\r\n    //     if (pokemons.find((poke) => poke.name.toLowerCase() === input.name.toLowerCase().trim())) {\r\n    //         alert(\"Ya existe el Pokemon\");\r\n    //         setErrors({\r\n    //             ...input,\r\n    //             [e.target.name]: \"PokÃ©mon duplicated\",\r\n    //         });\r\n    //         history.push('/home')\r\n    //     } else {\r\n    //         dispatch(postPokemon(input));\r\n    //         alert('Pokemon Created');\r\n    //         setInput({\r\n    //             name: \"\", hp: \"\", attack: \"\", defense: \"\", speed: \"\", height: \"\", weight: \"\", types: []\r\n    //         });\r\n    //         history.push('/home');\r\n    //     }\r\n\r\n\r\n    // }\r\n\r\n    // function handleDelete(e) {\r\n    //     e.preventDefault();\r\n    //     setTypes(types.filter((types) => types !== e.target.value));\r\n    //     console.log(types);\r\n    //     console.log(e.target.value);\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n\r\n            <h1 >Crea tu propio Pokemon</h1>\r\n            <form>\r\n                <legend>Name:</legend>\r\n                <input type='text' name='name' placeholder=\"Write a name...\" title=\"Only letters and blank spaces are accepted\" pattern= \"^[A-Za-zÃÃÃ¡Ã\"required/>\r\n                {/*<input type=\"submit\" value=\"Enviar\"/>*/}\r\n                </form>\r\n                </div>\r\n                )}\r\n "]},"metadata":{},"sourceType":"module"}