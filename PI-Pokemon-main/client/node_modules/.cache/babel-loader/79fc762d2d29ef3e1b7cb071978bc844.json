{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\Henry\\\\Final PI\\\\Pi---Pokemon\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\CardDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDetail } from \"../actions\";\nimport { useParams } from \"react-router-dom\";\nimport Loading from \"./Loading\";\nimport '../css/CardDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Detail() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const detailPokemon = useSelector(state => state.pokemons);\n  console.log(detailPokemon);\n  useEffect(() => {\n    dispatch(getDetail(id)); //accedo al id pasandole props a mi componente Detail\n  }, [dispatch]); // me traigo el estado detail desde el reducer con useSelector\n  //   if(!detailPokemon.name){\n  //     return(\n  //        <Loading/>\n  //     )\n  // }else{\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: detailPokemon === null || detailPokemon === void 0 ? void 0 : detailPokemon.map(c => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: c.name.charAt(0).toUpperCase() + c.name.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: c.imageDetail,\n              alt: \"Img not found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Type: \", c.types.map(c => c.name)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Hp: \", c.hp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Id: \", c.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Statistics: attack - \", c.attack, \", defense:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n} //}\n\n_s(Detail, \"qZFk7A3e5xgN7LGiKKCxOSyWlCA=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["C:/Users/andre/Desktop/Henry/Final PI/Pi---Pokemon/PI-Pokemon-main/client/src/components/CardDetail.jsx"],"names":["React","useEffect","Link","useDispatch","useSelector","getDetail","useParams","Loading","Detail","id","dispatch","detailPokemon","state","pokemons","console","log","map","c","name","charAt","toUpperCase","slice","imageDetail","types","hp","attack"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,uBAAP;;AAGA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAMI,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,aAAa,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAAjC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACL,SAAS,CAACI,EAAD,CAAV,CAAR,CADc,CACW;AAC1B,GAFQ,EAEN,CAACC,QAAD,CAFM,CAAT,CAP+B,CAW9B;AACH;AAEA;AACA;AACA;AAEA;;AAEI,sBACI;AAAA,cAEYC,aAFZ,aAEYA,aAFZ,uBAEYA,aAAa,CAAEK,GAAf,CAAoBC,CAAD,IAAO;AACtB,0BACI,QAAC,KAAD,CAAO,QAAP;AAAA,+BAEI;AAAA,iCACI;AAAA,oCACI;AAAA,wBAAKA,CAAC,CAACC,IAAF,CAAOC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAgCH,CAAC,CAACC,IAAF,CAAOG,KAAP,CAAa,CAAb;AAArC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,GAAG,EAAEJ,CAAC,CAACK,WAAZ;AAAyB,cAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,mCAAWL,CAAC,CAACM,KAAF,CAAQP,GAAR,CAAaC,CAAD,IAAOA,CAAC,CAACC,IAArB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,iCAASD,CAAC,CAACO,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,iCAASP,CAAC,CAACR,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA,kDAA0BQ,CAAC,CAACQ,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBH,KAjBD;AAFZ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,C,CAED;;GAhDwBjB,M;UACPF,S,EACEH,W,EACKC,W;;;KAHAI,M","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDetail } from \"../actions\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\nimport '../css/CardDetail.css';\r\n\r\n\r\nexport default function Detail() {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const detailPokemon = useSelector((state) => state.pokemons);\r\n  console.log(detailPokemon)\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getDetail(id)); //accedo al id pasandole props a mi componente Detail\r\n  }, [dispatch]);\r\n\r\n   // me traigo el estado detail desde el reducer con useSelector\r\n//   if(!detailPokemon.name){\r\n        \r\n//     return(\r\n//        <Loading/>\r\n//     )\r\n\r\n// }else{\r\n    \r\n    return(\r\n        <div >\r\n            {\r\n                    detailPokemon?.map((c) => {\r\n                        return (\r\n                            <React.Fragment>\r\n\r\n                                <div>\r\n                                    <div >\r\n                                        <h1>{c.name.charAt(0).toUpperCase()+ c.name.slice(1)}</h1>\r\n                                        <img src={c.imageDetail} alt='Img not found'/>\r\n                                        <h2>Type: {c.types.map((c) => c.name)}</h2>\r\n                                        <h2>Hp: {c.hp}</h2>\r\n                                        <h3>Id: {c.id}</h3>\r\n                                        <h3>Statistics: attack - {c.attack}, defense:</h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </React.Fragment>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\n//}\r\n\r\n"]},"metadata":{},"sourceType":"module"}