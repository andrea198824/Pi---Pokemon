{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\Henry\\\\Final PI\\\\Pi---Pokemon\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\CreatePokemon.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postPokemon, getTypes, getPokemon } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validate(input) {\n  let errors = {};\n\n  if (input.name === '') {\n    errors.name = 'Es necesario un nombre';\n  }\n\n  if (input.hp < 0) {\n    errors.hp = 'Debe ser mayor a 0';\n  }\n\n  if (input.attack < 0) {\n    errors.attack = 'Debe ser mayor a 0';\n  }\n\n  if (input.defense < 0) {\n    errors.defense = 'Debe ser mayor a 0';\n  }\n\n  if (input.speed < 0) {\n    errors.speed = 'Debe ser mayor a 0';\n  }\n\n  if (input.height < 0) {\n    errors.height = 'Debe ser mayor a 0';\n  }\n\n  if (input.weight < 0) {\n    errors.weight = 'Debe ser mayor a 0';\n  }\n\n  if (input.types.length === 0) {\n    errors.types = 'Debe tener al menos un tipo';\n  } else if (!input.image) {\n    errors.image = \"Please insert an image URL\";\n  } else if (!/(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)/.test(input.image)) {\n    errors.image = \"Please insert a valid image URL\";\n  }\n\n  return errors;\n}\n\nexport default function CreatePokemon() {\n  _s();\n\n  const dispatch = useDispatch(); //const history = useNavigate();\n\n  const types = useSelector(state => state.types);\n  const pokemons = useSelector(state => state.pokemons);\n  const history = useNavigate();\n  const [input, setInput] = useState({\n    name: \"\",\n    hp: \"\",\n    attack: \"\",\n    defense: \"\",\n    speed: \"\",\n    height: \"\",\n    weight: \"\",\n    types: []\n  });\n  const [errors, setErrors] = useState({});\n  const [button, setButton] = useState(true);\n  const [typ, setTypes] = useState([]);\n  useEffect(() => {\n    dispatch(getTypes());\n    dispatch(getPokemon());\n  }, [dispatch]);\n\n  function handleChange(e) {\n    e.preventDefault();\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n    setErrors(validate({ ...input,\n      [e.target.name]: e.target.value\n    }));\n    console.log(input);\n  }\n\n  function handleSelect(e) {\n    if (!typ.includes(e.target.value)) {\n      if (typ.length > 0) {\n        setTypes([...typ, e.target.value]);\n      } else {\n        setTypes([e.target.value]);\n      }\n    }\n\n    console.log(e.target.value);\n  }\n\n  function handleDelete(e) {\n    e.preventDefault();\n    setTypes(typ.filter(typ => typ !== e.target.value));\n    console.log(typ);\n    console.log(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    if (errors.name !== undefined || errors.hp !== undefined || errors.attack !== undefined || errors.defense !== undefined || errors.speed !== undefined || errors.heigh !== undefined || errors.weight !== undefined) {\n      document.getElementById(\"DoNotSubmit\");\n      return alert(\"Please complete the fields with valid data\");\n    }\n\n    const addDog = {\n      name: input.name,\n      height: input.heigh,\n      weight: input.weight,\n      attack: input.attack,\n      defense: input.defense,\n      speed: input.speed,\n      hp: input.hp,\n      image: input.image,\n      temperament: typ\n    };\n    e.preventDefault();\n    dispatch(postPokemon(addDog));\n    alert(\"Tu Pokemon fue creado correctamente!\");\n    setInput({\n      name: \"\",\n      hp: \"\",\n      attack: \"\",\n      defense: \"\",\n      speed: \"\",\n      height: \"\",\n      weight: \"\",\n      types: []\n    });\n    setTypes([]);\n    history(\"/home\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Crea tu propio Pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        href: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input.name,\n            name: \"name\",\n            placeholder: \"Write a name...\",\n            title: \"Only letters and blank spaces are accepted\",\n            pattern: \"^[A-Za-z\\xD1\\xC1\\xE1\\xC9\\xE9\\xCD\\xED\\xD3\\xF3\\xDA\\xFA\\xDC\\xFC\\\\s]+$\",\n            required: true,\n            onChange: e => handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: input.weight,\n            name: \"weight\",\n            placeholder: \"Write the weight of your pokemon...\",\n            title: \"Only numbers are accepted\",\n            pattern: \"[0-9]{2}\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), errors.hp && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.hp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Height:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: input.height,\n            name: \"height\",\n            placeholder: \"Write the height of your pokemon...\",\n            title: \"Only numbers are accepted\",\n            pattern: \"[0-9]{2}\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), errors.weight && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Hp:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: input.hp,\n            name: \"hp\",\n            placeholder: \"Write the hp of your pokemon...\",\n            title: \"Only numbers are accepted\",\n            pattern: \"[0-9]{3}\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this), errors.hp && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.hp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Attack:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: input.attack,\n            name: \"attack\",\n            placeholder: \"Write the attack of your pokemon...\",\n            title: \"Only numbers are accepted\",\n            pattern: \"[0-9]{2}\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this), errors.attack && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.attack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Defense:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: input.defense,\n            name: \"defense\",\n            placeholder: \"Write the defense of your pokemon...\",\n            title: \"Only numbers are accepted\",\n            pattern: \"[0-9]{2}\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this), errors.defense && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.defense\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Speed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: input.speed,\n            name: \"speed\",\n            placeholder: \"Write the speed of your pokemon...\",\n            title: \"Only numbers are accepted\",\n            pattern: \"[0-9]{2}\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this), errors.speed && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.speed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            onChange: e => handleSelect(e),\n            type: \"text\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), types.map((typ, id) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: typ.name,\n                children: typ.name\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this), typ.map((temp, id) => {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [typ, /*#__PURE__*/_jsxDEV(\"button\", {\n                  value: typ,\n                  onClick: e => handleDelete(e),\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Crear Pokemon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(CreatePokemon, \"TLVrbHwPx8fpy6YP+VHB3zLbPt0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useNavigate];\n});\n\n_c = CreatePokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePokemon\");","map":{"version":3,"sources":["C:/Users/andre/Desktop/Henry/Final PI/Pi---Pokemon/PI-Pokemon-main/client/src/components/CreatePokemon.jsx"],"names":["React","useState","useEffect","Link","useNavigate","useDispatch","useSelector","postPokemon","getTypes","getPokemon","validate","input","errors","name","hp","attack","defense","speed","height","weight","types","length","image","test","CreatePokemon","dispatch","state","pokemons","history","setInput","setErrors","button","setButton","typ","setTypes","handleChange","e","preventDefault","target","value","console","log","handleSelect","includes","handleDelete","filter","handleSubmit","undefined","heigh","document","getElementById","alert","addDog","temperament","map","id","temp"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postPokemon, getTypes, getPokemon } from '../actions/index';\r\n\r\nfunction validate(input) {\r\n    let errors = {};\r\n    if (input.name === '') {\r\n        errors.name = 'Es necesario un nombre'\r\n    }\r\n    if (input.hp < 0) {\r\n        errors.hp = 'Debe ser mayor a 0'\r\n    }\r\n    if (input.attack < 0) {\r\n        errors.attack = 'Debe ser mayor a 0'\r\n    }\r\n    if (input.defense < 0) {\r\n        errors.defense = 'Debe ser mayor a 0'\r\n    }\r\n    if (input.speed < 0) {\r\n        errors.speed = 'Debe ser mayor a 0'\r\n    }\r\n    if (input.height < 0) {\r\n        errors.height = 'Debe ser mayor a 0'\r\n    }\r\n    if (input.weight < 0) {\r\n        errors.weight = 'Debe ser mayor a 0'\r\n    }\r\n    if (input.types.length === 0) {\r\n        errors.types = 'Debe tener al menos un tipo'\r\n    } else if (!input.image) {\r\n        errors.image = \"Please insert an image URL\";\r\n    } else if (\r\n        !/(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)/.test(input.image)\r\n    ) {\r\n        errors.image = \"Please insert a valid image URL\";\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default function CreatePokemon() {\r\n    const dispatch = useDispatch();\r\n    //const history = useNavigate();\r\n    const types = useSelector((state) => state.types);\r\n    const pokemons = useSelector((state) => state.pokemons);\r\n    const history = useNavigate();\r\n    const [input, setInput] = useState({ name: \"\", hp: \"\", attack: \"\", defense: \"\", speed: \"\", height: \"\", weight: \"\", types: [] });\r\n    const [errors, setErrors] = useState({});\r\n    const [button, setButton] = useState(true);\r\n    const [typ, setTypes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTypes());\r\n        dispatch(getPokemon())\r\n    }, [dispatch])\r\n    \r\n    function handleChange(e) {\r\n        e.preventDefault();\r\n        setInput({\r\n            ...input,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        setErrors(\r\n            validate({\r\n                ...input,\r\n                [e.target.name]: e.target.value,\r\n            })\r\n        );\r\n        console.log(input);\r\n    }\r\n    function handleSelect(e) {\r\n        if (!typ.includes(e.target.value)) {\r\n            if (typ.length > 0) {\r\n                setTypes([...typ, e.target.value]);\r\n            } else {\r\n                setTypes([e.target.value]);\r\n            }\r\n        }\r\n        console.log(e.target.value);\r\n    }\r\n    function handleDelete(e) {\r\n        e.preventDefault();\r\n        setTypes(typ.filter((typ) => typ !== e.target.value));\r\n        console.log(typ);\r\n        console.log(e.target.value);\r\n    }\r\n    function handleSubmit(e) {\r\n        if (\r\n            errors.name !== undefined ||\r\n            errors.hp !== undefined ||\r\n            errors.attack !== undefined ||\r\n            errors.defense !== undefined ||\r\n            errors.speed !== undefined ||\r\n            errors.heigh !== undefined ||\r\n            errors.weight !== undefined \r\n        ) {\r\n            document.getElementById(\"DoNotSubmit\");\r\n            return alert(\"Please complete the fields with valid data\");\r\n        }\r\n        const addDog = {\r\n            name: input.name,\r\n            height: input.heigh,\r\n            weight: input.weight,\r\n            attack: input.attack,\r\n            defense: input.defense,\r\n            speed: input.speed,\r\n            hp: input.hp,\r\n            image: input.image,\r\n            temperament: typ,\r\n        };\r\n        e.preventDefault();\r\n        dispatch(postPokemon(addDog));\r\n        alert(\"Tu Pokemon fue creado correctamente!\");\r\n        setInput({\r\n            name: \"\", hp: \"\", attack: \"\", defense: \"\", speed: \"\", height: \"\", weight: \"\", types: []\r\n        });\r\n        setTypes([]);\r\n        history(\"/home\");\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1 >Crea tu propio Pokemon</h1>\r\n            <form href=\"1\">\r\n                <div>\r\n                    <legend>Name:</legend>\r\n                    <input type='text' value={input.name} name='name' placeholder=\"Write a name...\" title=\"Only letters and blank spaces are accepted\" pattern=\"^[A-Za-zÑÁáÉéÍíÓóÚúÜü\\s]+$\" required onChange={(e) => handleChange(e)}/>\r\n                    {/*<input type=\"submit\" value=\"Enviar\"/>*/}\r\n                    {errors.name && (\r\n                        <p>{errors.name}</p>\r\n                    )}\r\n                </div>\r\n\r\n                <div>\r\n                    <legend>Weight:</legend>\r\n                    <input type='number' value={input.weight} name='weight' placeholder=\"Write the weight of your pokemon...\" title=\"Only numbers are accepted\" pattern=\"[0-9]{2}\" required />\r\n                    {/*<input type=\"submit\" value=\"Enviar\"/>*/}\r\n                    {errors.hp && (\r\n                        <p>{errors.hp}</p>\r\n                    )}\r\n                </div>\r\n                <div>\r\n                    <legend>Height:</legend>\r\n                    <input type='number' value={input.height} name='height' placeholder=\"Write the height of your pokemon...\" title=\"Only numbers are accepted\" pattern=\"[0-9]{2}\" required />\r\n                    {/*<input type=\"submit\" value=\"Enviar\"/>*/}\r\n                    {errors.weight && (\r\n                        <p>{errors.weight}</p>\r\n                    )}\r\n                </div>\r\n                <div>\r\n                    <legend>Hp:</legend>\r\n                    <input type='number' value={input.hp} name='hp' placeholder=\"Write the hp of your pokemon...\" title=\"Only numbers are accepted\" pattern=\"[0-9]{3}\" required />\r\n                    {/*<input type=\"submit\" value=\"Enviar\"/>*/}\r\n                    {errors.hp && (\r\n                        <p>{errors.hp}</p>\r\n                    )}\r\n\r\n                    <legend>Attack:</legend>\r\n                    <input type='number' value={input.attack} name='attack' placeholder=\"Write the attack of your pokemon...\" title=\"Only numbers are accepted\" pattern=\"[0-9]{2}\" required />\r\n                    {/*<input type=\"submit\" value=\"Enviar\"/>*/}\r\n                    {errors.attack && (\r\n                        <p>{errors.attack}</p>\r\n                    )}\r\n                </div>\r\n                <div>\r\n                    <legend>Defense:</legend>\r\n                    <input type='number' value={input.defense} name='defense' placeholder=\"Write the defense of your pokemon...\" title=\"Only numbers are accepted\" pattern=\"[0-9]{2}\" required />\r\n                    {/*<input type=\"submit\" value=\"Enviar\"/>*/}\r\n                    {errors.defense && (\r\n                        <p>{errors.defense}</p>\r\n                    )}\r\n\r\n                    <legend>Speed:</legend>\r\n                    <input type='number' value={input.speed} name='speed' placeholder=\"Write the speed of your pokemon...\" title=\"Only numbers are accepted\" pattern=\"[0-9]{2}\" required />\r\n                    {/*<input type=\"submit\" value=\"Enviar\"/>*/}\r\n                    {errors.speed && (\r\n                        <p>{errors.speed}</p>\r\n                    )}\r\n                </div>\r\n                <div>\r\n                    <legend>Type:</legend>\r\n                    <select\r\n                            name='type'\r\n                            onChange={(e) => handleSelect(e)}\r\n                            type='text'\r\n                        >\r\n                            <option value={null}></option>\r\n                            {types.map((typ, id) => {\r\n\r\n                                return (\r\n                                    <option key={id} value={typ.name}>\r\n                                        {typ.name}\r\n                                    </option>\r\n                                );\r\n                            })}\r\n                        </select>\r\n                        {typ.map((temp, id) => {\r\n\r\n                            return (\r\n                                <React.Fragment key={id}>\r\n                                    <div>\r\n                                        {typ}\r\n                                        <button\r\n                                            value={typ}\r\n                                            onClick={(e) => handleDelete(e)}\r\n                                        >\r\n                                            x\r\n                                        </button>\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                <button>Crear Pokemon</button>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}}\r\n"]},"metadata":{},"sourceType":"module"}