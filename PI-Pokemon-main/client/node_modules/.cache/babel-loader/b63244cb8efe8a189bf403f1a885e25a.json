{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\Henry\\\\Final PI\\\\Pi---Pokemon\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPokemon, getTypes, getDetail, getDetailByName, postPokemon, filterPokemonCreated, filterPokemonType, orderByName } from \"../actions\";\nimport { Link } from \"react-router-dom\"; //import SearchBar from \"./SearchBar\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  const allPokemon = useSelector(state => state.pokemon);\n  const [order, setOrder] = useState('');\n  const [orderr, setOrderr] = useState(\"\"); //cambiar nombres\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonPerPage, setDogsPerPage] = useState(8);\n  const indexOfLastPokemon = currentPage * pokemonPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonPerPage;\n  const currentPokemon = allPokemon.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  const allTemp = useSelector(state => state.type);\n  useEffect(() => {\n    // hooks-acepta una función como argumento\n    dispatch(getPokemon());\n  }, [dispatch]);\n\n  function handleClick(e) {\n    e.preventDefault(); //preventDefault se lo paso para que no se rompa \n\n    dispatch(getPokemon()); // esto me lo resetea por si se bugea, y me trae todo denuevo\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"jCrxsSrIYbVn4yXCbPnV6Oqd3VQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/andre/Desktop/Henry/Final PI/Pi---Pokemon/PI-Pokemon-main/client/src/components/Home.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getPokemon","getTypes","getDetail","getDetailByName","postPokemon","filterPokemonCreated","filterPokemonType","orderByName","Link","Home","dispatch","allPokemon","state","pokemon","order","setOrder","orderr","setOrderr","currentPage","setCurrentPage","pokemonPerPage","setDogsPerPage","indexOfLastPokemon","indexOfFirstPokemon","currentPokemon","slice","paginado","pageNumber","allTemp","type","handleClick","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,UADJ,EAEIC,QAFJ,EAGIC,SAHJ,EAIIC,eAJJ,EAKIC,WALJ,EAMIC,oBANJ,EAOIC,iBAPJ,EAQIC,WARJ,QASO,YATP;AAUA,SAASC,IAAT,QAAqB,kBAArB,C,CAGA;;;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC1B,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,UAAU,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAA9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EAAD,CAApC,CAJ0B,CAIe;;AACzC,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACwB,cAAD,EAAiBC,cAAjB,IAAmCzB,QAAQ,CAAC,CAAD,CAAjD;AACA,QAAM0B,kBAAkB,GAAGJ,WAAW,GAAGE,cAAzC;AACA,QAAMG,mBAAmB,GAAGD,kBAAkB,GAAGF,cAAjD;AACA,QAAMI,cAAc,GAAGb,UAAU,CAACc,KAAX,CAAiBF,mBAAjB,EAAsCD,kBAAtC,CAAvB;;AAGA,QAAMI,QAAQ,GAAKC,UAAD,IAAgB;AAC9BR,IAAAA,cAAc,CAACQ,UAAD,CAAd;AACH,GAFD;;AAIA,QAAMC,OAAO,GAAG7B,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACiB,IAAlB,CAA3B;AAEAhC,EAAAA,SAAS,CAAC,MAAM;AAAE;AACda,IAAAA,QAAQ,CAACV,UAAU,EAAX,CAAR;AACH,GAFQ,EAEN,CAACU,QAAD,CAFM,CAAT;;AAIA,WAASoB,WAAT,CAAqBC,CAArB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF,GADoB,CACA;;AACpBtB,IAAAA,QAAQ,CAACV,UAAU,EAAX,CAAR,CAFoB,CAEG;AAC1B;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA/BuBS,I;UACHX,W,EACEC,W,EAcHA,W;;;KAhBIU,I","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    getPokemon,\r\n    getTypes,\r\n    getDetail,\r\n    getDetailByName,\r\n    postPokemon,\r\n    filterPokemonCreated,\r\n    filterPokemonType,\r\n    orderByName\r\n} from \"../actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n//import SearchBar from \"./SearchBar\";\r\n\r\nexport default function Home(){\r\n    const dispatch = useDispatch()\r\n    const allPokemon = useSelector((state) => state.pokemon)\r\n    const [order, setOrder] = useState('')\r\n    const [orderr, setOrderr] = useState(\"\");//cambiar nombres\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [pokemonPerPage, setDogsPerPage] = useState(8)\r\n    const indexOfLastPokemon = currentPage * pokemonPerPage\r\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonPerPage\r\n    const currentPokemon = allPokemon.slice(indexOfFirstPokemon, indexOfLastPokemon)\r\n\r\n\r\n    const paginado = ((pageNumber) => {\r\n        setCurrentPage(pageNumber)\r\n    })\r\n\r\n    const allTemp = useSelector((state) => state.type);\r\n\r\n    useEffect(() => { // hooks-acepta una función como argumento\r\n        dispatch(getPokemon());\r\n    }, [dispatch])\r\n    \r\n    function handleClick(e) {\r\n        e.preventDefault(); //preventDefault se lo paso para que no se rompa \r\n        dispatch(getPokemon()) // esto me lo resetea por si se bugea, y me trae todo denuevo\r\n    }\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}